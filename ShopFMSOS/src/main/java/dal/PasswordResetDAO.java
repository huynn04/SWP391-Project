package dal;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.Optional;
import java.util.Date;

/**
 * DAO ƒë·ªÉ qu·∫£n l√Ω token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.
 */
public class PasswordResetDAO extends DBContext {
    
    // L∆∞u token v√†o database v·ªõi th·ªùi gian h·∫øt h·∫°n l√† 30 ph√∫t
    public void createPasswordResetToken(int userId, String token) {
        String sql = "INSERT INTO password_reset_tokens (user_id, token, expires_at) VALUES (?, ?, ?)";
        try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, userId);
            ps.setString(2, token);
            ps.setTimestamp(3, new Timestamp(System.currentTimeMillis() + 30 * 60 * 1000)); // 30 ph√∫t
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // L·∫•y token t·ª´ database
    public Optional<Integer> getUserIdByToken(String token) {
    String sql = "SELECT user_id FROM password_reset_tokens WHERE token = ? AND expires_at > ?";
    try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
        ps.setString(1, token);
        ps.setTimestamp(2, new Timestamp(System.currentTimeMillis()));
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            return Optional.of(rs.getInt("user_id")); // üõ† FIX: ƒê·ªïi t·ª´ "userId" th√†nh "user_id"
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return Optional.empty();
}


    // X√≥a token sau khi s·ª≠ d·ª•ng
    public void deleteToken(String token) {
        String sql = "DELETE FROM password_reset_tokens WHERE token = ?";
        try (Connection conn = getConnection(); PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setString(1, token);
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
